import pandas as pd
import streamlit as st
from PIL import Image
from mylib import *


# –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.title("ML Application ü§ñ")

st.header('–ö–ª–∞—Å—Å—Ñ–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞')
st.markdown(
    '–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ 2 –ø–æ–ª—è —Å üö® - –æ–Ω–∏ –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã:')

# —Å–µ–∫—Ü–∏—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
job = st.selectbox("***üö®–†–∞–±–æ—Ç–∞***", categs['job'], index=unknown_index['job'])
housing = st.selectbox("***üö®–ï—Å—Ç—å –ª–∏ –∫—Ä–µ–¥–∏—Ç –Ω–∞ –∂–∏–ª—å—ë***",
                       categs['housing'], index=unknown_index['housing'])
loan = st.selectbox("***üö®–ï—Å—Ç—å –ª–∏ –Ω–µ–ø–æ–ø–æ–≥–∞—à–µ–Ω–Ω—ã–π –∫—Ä–µ–¥–∏—Ç (–Ω–µ –Ω–∞ –∂–∏–ª—å—ë)***",
                    categs['loan'], index=unknown_index['loan'])
education = st.selectbox(
    "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", categs['education'], index=unknown_index['education'])
marital = st.selectbox("–°–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ",
                       categs['marital'], index=unknown_index['marital'])
default = st.selectbox("–ë—ã–ª –ª–∏ –æ—Ç–∫–∞–∑ –æ—Ç –≤—ã–ø–ª–∞—Ç—ã –∫—Ä–µ–¥–∏—Ç–∞",
                       categs['default'], index=unknown_index['default'])
age = st.number_input(label="–í–æ–∑—Ä–∞—Å—Ç", min_value=18, max_value=100)

# –≤—ã–≤–æ–¥ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
st.markdown('–í–≤–µ–¥—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:')
client = pd.DataFrame(columns=all_columns)
client.loc['–ö–ª–∏–µ–Ω—Ç'] = [job, housing, loan, education, marital, default, age]
st.dataframe(client, width=1500)

# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É, –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è
if st.button('–ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å'):
    if (job == 'unknown')+(housing == 'unknown')+(loan == 'unknown') > 1:
        st.markdown('–í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º—É–º –¥–≤–∞ –ø–æ–ª—è —Å üö®')
    else:
        # –∑–∞–ø—É—Å–∫ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–ø—É—Å–∫–æ–≤ –∏ –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏
        mess, client_data, client_info = check_main_na(client)

        # –≤—ã–≤–æ–¥ –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        st.markdown('–î–∞–Ω–Ω—ã–µ –¥–ª—è –º–æ–¥–µ–ª–∏:')
        st.markdown(mess)
        st.dataframe(client_info, width=1500)
        st.markdown('–î–∞–Ω–Ω—ã–µ, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –º–æ–¥–µ–ª—å:')
        st.dataframe(client_data, width=1500)

        # –∫–ª–∞—Å—Å—Ñ–∏–∫–∞—Ü–∏—è
        label = model.predict(client_data[main_columns])[0]
        st.markdown('')
        st.markdown('')
        st.markdown(
            f'***–ú–æ–¥–µ–ª—å –æ–ø—Ä–µ–¥–∏–ª–∏–ª–∞ –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –∫ –∫–ª–∞—Å—Å—É {get_label_sym(label)}***')
        st.markdown(
            '–û—Ç–∫—Ä–æ–π—Ç–µ —Ä–∞–∑–¥–µ–ª *–û–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞—Å—Ç–µ—Ä–æ–≤* –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–µ–ª–µ–Ω–∏—è —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞.')

else:
    st.markdown(
        '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª—è –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –≤—ã–ø–æ–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏.')


# –æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤ –∏ –¥–∞–Ω–Ω—ã—Ö
st.header('–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–æ–≤')
st.markdown('*–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —Å–µ–∫—Ü–∏–∏*')
clusters_info = st.checkbox('–û–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞—Å—Ç–µ—Ä–æ–≤')
model_info = st.checkbox('–û–ø–∏—Å–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏')
work_info = st.checkbox('–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥–µ–ª–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã')
data_info = st.checkbox('–û–ø–∏—Å–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö')

if clusters_info:
    st.header('–û–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤')
    st.markdown("""          
    –ú–æ–¥–µ–ª—å —Ä–∞—Å–ø–µ–¥–µ–ª—è–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –±–∞–Ω–∫–∞ –ø–æ —á–µ—Ç—ã—Ä–µ–º –∫–ª–∞—Å—Å–∞–º (—Ç–∞–∫–∂–µ —É–∫–∞–∑–∞–Ω—ã –≤–æ–∑–º–æ–∂—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã): 
                    
    - ***–ö–ª–∞—Å—Å 1***: –∫–ª–∏–µ–Ω—Ç—ã –∏–º–µ—é—Ç –∫—Ä–µ–¥–∏—Ç—ã –Ω–∞ –∂–∏–ª—å—ë –∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∏–º–µ—é—Ç —Ä–∞–±–æ—Ç—É admin, blue-color, —Ä–µ–∂–µ management, housemaid –∏ entrepreneur;
                     
                –°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –∂–∏–ª—å—è, –ü—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ –ø–æ–≥–∞—à–µ–Ω–∏—é –∫—Ä–µ–¥–∏—Ç–æ–≤ –Ω–∞ –∂–∏–ª—å—ë, –ò–ø–æ—Ç–µ—á–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–º–∏ —Å—Ç–∞–≤–∫–∞–º–∏
    - ***–ö–ª–∞—Å—Å 2***: –∫–ª–∏–µ–Ω—Ç—ã –∏–º–µ—é—Ç –Ω–µ–ø–æ–≥–∞—à–µ–Ω–Ω—ã–µ –∫—Ä–µ–¥–∏—Ç—ã;
                     
                –ü—Ä–æ–≥—Ä–∞–º–º—ã –∫–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏–∏ –¥–æ–ª–≥–æ–≤, –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–ª–∞—Ç–µ–∂–∞—Ö, –ü–ª–∞–Ω—ã –æ—Ç—Å—Ä–æ—á–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π, –ü—Ä–æ–≥—Ä–∞–º–º—ã —Ä–µ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è
    - ***–ö–ª–∞—Å—Å 3***: –∫–ª–∏–µ–Ω—Ç—ã –Ω–µ –∏–º–µ—é—Ç –Ω–∏ –Ω–µ–ø–æ–≥–∞—à–µ–Ω–Ω—ã–µ –∫—Ä–µ–¥–∏—Ç—ã, –Ω–∏ –∫—Ä–µ–¥–∏—Ç–æ–≤ –Ω–∞ –∂–∏–ª—å—ë;
                     
                –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Å—á–µ—Ç–∞, –ü—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—é, –ö—ç—à–±—ç–∫ –∏ –Ω–∞–≥—Ä–∞–¥—ã, –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã, –¶–∏—Ñ—Ä–æ–≤—ã–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    - ***–ö–ª–∞—Å—Å 4***: –∫–ª–∏–µ–Ω—Ç—ã –∏–º–µ—é—Ç –∫—Ä–µ–¥–∏—Ç—ã –Ω–∞ –∂–∏–ª—å—ë –∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∏–º–µ—é—Ç —Ä–∞–±–æ—Ç—É technician, services, —Ä–µ–∂–µ self-employed, retired, unemployed –∏ student ; 
                     
                –ü—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è –±–µ–∑—Ä–∞–±–æ—Ç–Ω—ã—Ö –∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –ü—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä–æ–≤, –ò–ø–æ—Ç–µ—á–Ω—ã–µ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏, –ò–ø–æ—Ç–µ—á–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
                
    –†–∞–∑–º–µ—Ä—ã –∫–ª–∞—Å—Ç–µ—Ä–æ–≤:
    
    –ö–ª–∞—Å—Ç–µ—Ä 1:  0.26
    
    –ö–ª–∞—Å—Ç–µ—Ä 2:  0.15
    
    –ö–ª–∞—Å—Ç–µ—Ä 3:  0.43
    
    –ö–ª–∞—Å—Ç–µ—Ä 4:  0.16
             
    –≠—Ç–∏ –∫–∞–ª–∞—Å—Å—ã –±—ã–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏–∏ –º–µ—Ç–æ–¥–æ–º K-means. –ë—ã–ª–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—ã–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã —Ç—Ä–∏ –ø—Ä–∏–∑–Ω–∞–∫–∞, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –∫–ª–∏–µ–Ω—Ç—ã –æ—Ç–ª–∏—á–Ω–æ –¥–µ–ª—è—Ç—Å—è –Ω–∞ 4 –∫–ª–∞—Å—Ç–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ä–æ—à–æ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É—é—Ç—Å—è –∫–∞–∫ —Ü–µ–ª–µ–≤—ã–µ –≥—Ä—É–ø–ø—ã –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞.            
    """)

    st.markdown("""
                
    –ù–∏–∂–µ –ø–æ–∫–∞–∑–∞–Ω–æ –∫–∞–∫ –∫–ª–∞—Å—Å—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –≤ –∏—Ç–æ–≥–æ–≤–º —Ç—Ä—ë—Ö–º–µ—Ä–Ω–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ, –º–æ–∂–Ω–æ –ª–µ–≥–∫–æ –∏—Ö —Ä–∞–∑–¥–µ–ª–∏—Ç—å –≤–∏–∑—É–∞–ª—å–Ω–æ. 
    """)
    st.write(load_object('app/source/scatter3d.pkl'))
    st.markdown("""
                
    –ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ —Ä–∞–¥–∏–∞–ª—å–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ —Å—Ä–µ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–∑–Ω–∞–∫–∞ –≤–Ω—É—Ç—Ä–∏ –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Ç–µ—Ä–∞. –û–Ω–∞ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –∏–Ω—Ç–µ—Ä–ø—Ä–∏—Ç–∞—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∫–ª–∞—Å—Ç–µ—Ä–æ–≤. 
    """)
    st.write(load_object('app/source/final_polar_plot.pkl'))

if model_info:
    st.header('–û–ø–∏—Å–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏')
    st.markdown(""" 
    –ù–∏–∂–µ –æ—Ç—Ä–∏—Å–æ–≤–∞–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –†–µ—à–∞—é—â–µ–≥–æ –¥–µ—Ä–µ–≤–∞, –æ—Ç–≤–µ—á–∞—é—â–µ–≥–æ –∑–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—é –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ –≤—ã—è–≤–ª–µ–Ω–Ω—ã–º –∫–ª–∞—Å—Å–∞–º. 
    """)
    st.write(load_object('app/source/model_structure.pkl'))
    st.markdown('–ú–µ—Ç—Ä–∏–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏:')
    metrics = Image.open('app/source/confusion_matrix.png')
    st.image(metrics)
    st.markdown('–ë–∞–ª–∞–Ω—Å –∫–ª–∞—Å—Å–æ–≤:')
    metrics = Image.open('app/source/class_balance.png')
    st.image(metrics)
    st.markdown('–ú–æ–¥–µ–ª—å –†–µ—à–∞—é—à–µ–≥–æ –¥–µ—Ä–µ–≤–∞ –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–∏–ª–∞—Å—å —Å–æ –Ω–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∫–ª–∞—Å—Å–∞–º–∏.')

if work_info:
    st.header('–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥–µ–ª–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã')
    with open('app/source/summary.txt', encoding="utf8") as f:
        st.markdown(f.read())

if data_info:
    st.header('–û–ø–∏—Å–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö')
    with open('app/source/raw_data_description.txt', encoding="utf8") as f:
        st.markdown(f.read())


st.header('–°—Å—ã–ª–∫–∏')
st.markdown("""
- *GitHub*: https://github.com/batchatilionus/ML_OPS-Banking-lustering-and-Classification
- *Telegram*: https://t.me/batchatilion
- *LinkedIn*: https://www.linkedin.com/in/nikita-kuchko-249a4a290
""")
